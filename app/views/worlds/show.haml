- title world.name

= render partial: 'worlds/header'

%aside
  - if signed_in?
    = form_for [:play, world], method: 'put', html: {id: 'play-here'} do
      %button{disabled: (current_user.current_world == world)}
        %span.icon= image_tag 'play.png'
        - case
        - when current_user.current_world == world
          Playing here
        - when world.players.include?(current_user)
          Play here
        - else
          Ask to play here
    
    - if world.opped?(current_user)
      %button.add-friends(data-controls-modal="add-friends" data-backdrop="true" data-keyboard="true")
        %span.icon= image_tag 'play.png'
        Add Friends
      
      #add-friends.modal{hidden}
        .modal-header
          %a.close(href='#') &times;
          %h2 Add Friends
          
        .modal-body
          = form_tag add_world_players_path(world), id: 'add-players' do
            %section
              = text_field_tag :username, nil, placeholder: 'Username'
              .hint
                The button will light up when you type a correct username.

            %section
              = submit_tag 'Add friend', disabled: true
                            
        :javascript
          $(function(){
            // $('#add-friends').modal({ keyboard: true });
            
            var form = $('form#add-players'),
                searchPath = #{search_world_players_path(world).to_json};
            form.find('input[name=username]').keydown(_.debounce(function() {
              var username = $(this).val();
              // TODO Fix to disable input when user types bad username
              $.getJSON(searchPath, {username: username}, function(data, status) {
                form.find('input[type=submit]').attr('disabled', false);
              });
            }, 300));
          });

  %h2 Share this world
  %p.social
    %a.twitter-share-button{href: 'https://twitter.com/share', data: {text: "Play Minecraft with me in #{world.name} - #{world_url(world)}", url: world_url(world), count: 'horizontal', via: 'minefold'}} Tweet
    %script{type: 'text/javascript', src: '//platform.twitter.com/widgets.js'}

    %iframe.facebook-like-button{src: "//www.facebook.com/plugins/like.php?href=#{world_url(world)}&send=true&layout=button_count&show_faces=false&height=50&action=like&colorscheme=light&appId=#{ENV['FB_APP_ID'].to_i}", allowTransparency: true, scrolling: 'no', frameborder: 0}


  %h2 Friends playing here
  %ul.players
    - world.current_players.sort_by(&:username).each do |player|
      %li.online= link_to player.username, player
    - world.offline_players.sort_by(&:username).each do |player|
      %li.offline= link_to player.username, player
  

%article
  - if signed_in?
    %form#share
      .avatar
        = image_tag current_user.avatar.head.s24.url, width: 24, height: 24

      %input{type: 'text', name: 'text', rows: 2, maxlength: 100, autocomplete: 'off', placeholder: 'Chat with other players'}

      .note Press enter to chat

  #events

  :javascript
    var events, eventsView, shareView, pusher, channel;

    events = new MF.EventsCollection();
    events.fetch({
      success: function() {
        eventsView = new MF.EventsView({
          collection: events
        });

        $('#events').append(eventsView.el);

        eventsView.render();
      }
    });

    shareView = new MF.ShareView({
      el: $('form#share'),
      collection: events
    });

    pusher = new Pusher(#{Pusher.key.to_json}, {
      encrypted: true
    });
    
    channel = pusher.subscribe(#{world.pusher_key.to_json});
    
    channel.bind('chat-created', function(chat) {
      var sameChat = events.find(function(e){
        return e.id == chat.id || (!e.id && e.get('text') == chat.text);
      })
    
      if(!sameChat) {
        var chatModel = new MF.Chat(chat);
        events.add(chatModel);
      }
    });

