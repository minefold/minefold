= render partial: 'worlds/header'

- if world.mapped?
  = javascript_include_tag '//maps.google.com/maps/api/js?sensor=false'
  :javascript
    var world = new MF.World(#{world.to_json(only: [:_id, :last_mapped_at])});

    var mapView = new MF.MapView({
      el: $('#backside #map')[0],
      host: #{world.map_assets_url.to_json}
    });

    mapView.render();

- else
  %article
    - if can? :play, world
      %h1 Waiting for you to play…
      %p Please join #{current_user.host}
    - else
      %h1 Waiting for somebody to play here…

:css
  #page {display: none;}

%article
  / - if signed_in? and can?(:play, world)
  /   %form#share
  /     .avatar
  /       = avatar_tag current_user, 24
  /
  /     %input{type: 'text', name: 'text', rows: 2, maxlength: 100, autocomplete: 'off', placeholder: 'Chat with other players'}
  /
  /     = link_to 'Upload a photo', new_world_photo_path(world), class: 'photo'
  /     .note Press enter to chat
  /
  / #events
  /
  / :javascript
  /   var events, activityView, shareView, addFriendView, pusher, channel;
  /
  /   events = new MF.EventsCollection();
  /   events.fetch({
  /     success: function() {
  /       activityView = new MF.ActivityView({
  /         collection: events
  /       });
  /
  /       events.bind('add', activityView.addEvent);
  /
  /       $('#events').append(activityView.el);
  /
  /       activityView.render();
  /     }
  /   });
  /
  /   shareView = new MF.ShareView({
  /     el: $('form#share'),
  /     collection: events
  /   });
  /
  /   addFriendView = new MF.AddFriendView({
  /     el: $('#add-friend'),
  /     searchPath: #{search_world_members_path(world, format: :json).to_json}
  /   });
  /
  /   pusher = new Pusher(#{Pusher.key.to_json}, {
  /     encrypted: true
  /   });
  /
  /   channel = pusher.subscribe(#{world.pusher_key.to_json});
  /
  /   channel.bind('chat-created', function(chat) {
  /     // This is a hack to get around Backbone not sending Pusher's socket_id when saving a model.
  /     var previousChatIsSame = events.any(function(e) {
  /       return e.id === chat._id || (!e.id && e.get('type') === 'chat' && e.get('text') === chat.text);
  /     });
  /
  /     if(!previousChatIsSame) {
  /       var chatModel = new MF.ChatEvent(chat);
  /       events.add(chatModel);
  /     }
  /   });


