- track 'viewed world'
- title world_fullname(world)
- layout :world
- provide :opengraph do
  = og_tags(world)

= render partial: 'worlds/masthead'

#fb-root

- if not world.map?
  .hero-unit.hero-unit-welcome-world
    %h2
      Awesomesauce! Your server's address is

    %pre
      %code.host= world.host

    %p.gentle-nudge
      (the map will start rendering after you've started playing)

    .share
      %a{href: 'https://twitter.com/share', class: 'twitter-share-button', data: {url: player_world_url(world.creator.minecraft_player, world), related: 'minefold', lang: 'en', size: 'large', count: 'none', text: "Join my new Minecraft server", hashtags: 'minefold:Keep up to date with the latest changes to Minefold'}} Tweet

      :javascript
        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");

    %a.facebook-post-button Share on Facebook

    - content_for :tail do
      :javascript
        app.on('fb:connected', function() {
          $('a.facebook-post-button').click(function() {

            var obj = {
              method: 'feed',
              link: #{player_world_url(world.creator.minecraft_player, world).to_json},
              picture: #{("http://minefold.com" + world.creator.minecraft_player.avatar.large.url).to_json},
              name: #{world.name.to_json},
              summary: #{world.host.to_json},
              description: "Start playing with me on my new Minecraft server!",
              ref: 'new'
            };

            FB.ui(obj, function() {});

          });
        });

- else
  .row
    .map.span12
  - content_for :tail do
    = javascript_include_tag '//maps.google.com/maps/api/js?sensor=false'
    :javascript
      $(document).ready(function() {
        var world = new Application.World(#{render('worlds/world.json', world: world)});

        var worldMapView = new Application.WorldMapView({model: world});
        $('.map').append(worldMapView.el);
        worldMapView.render();
      });

%ul.player-grid.unstyled
  - world.players.each do |player|
    %li.player
      = link_to player_path(player) do
        = player_avatar_tag player, size: :small

.row
  .span8.comments
    - if world.comments.any?
      %h4= pluralize world.comments.count, 'comment', 'comments'

      %hr

      - world.comments.select {|c| c.author.minecraft_player}.each do |comment|
        .row[comment]
          .span1
            = player_avatar_tag comment.author.minecraft_player, size: :medium

          .span7
            %h5
              %a.url{rel: 'contact', title: comment.author.minecraft_player.username, href: player_path(comment.author.minecraft_player)}
                = comment.author.minecraft_player.username

            .body= markdown comment.text
            %p.meta
              = time_ago_in_words(comment.created_at)
              ago

    - if can? :read, world
      - content_for :tail do
        :javascript
          $(function() {
            $('textarea#comment_text').elastic();
          });

      %hr

      = form_for world.comments.new, url: player_world_comments_path(world.creator.minecraft_player, world), class: 'form-horizontal' do |f|
        %p.pull-right
          %a{href: 'http://daringfireball.net/projects/markdown/syntax', target: '_blank'}Markdown Syntax
        %h4 Post a new comment

        .control-group
          .control
            = f.text_area :text, rows: 3, class: %w(input-xlarge span8)
        .form-actions
          = f.submit 'Post comment', class: %w(btn btn-primary)

  .span2
    %ol.tags.unstyled
      - world.tags.each do |tag|
        %li.tag= tag.name

    %dl
      %dt= pluralize_text world.players.size, 'member', 'players'
      %dd= number_with_delimiter world.players.size

      - man_hours = (world.minutes_played / 60.0).round(2)
      %dt= pluralize_text man_hours, 'man hour', 'man hours'
      %dd= number_with_delimiter man_hours

      - if world.children.any?
        %dt= pluralize_text world.children.size, 'clone', 'clones'
        %dd= number_with_delimiter world.children.size
