- title "#{world.name} members"
- masthead do
  %h1 #{world.name} members
  %p
    = link_to user_world_path(world.creator, world) do
      ← back to #{world.name}

- if can? :operate, world
  - if world.membership_requests.any?
    %h2 Pending Membership Requests
    %section.members
      %ul
        - world.membership_requests.each do |r|
          %li
            = link_to user_path(r.user) do
              = avatar_tag r.user, :medium, width: 40, height: 40
            .meta
              .username= r.user.username
              .actions
                = button_to 'Approve', approve_user_world_membership_request_path(world.creator, world, r), method: :put, class: 'approve'
                = button_to 'Ignore', user_world_membership_request_path(world.creator, world, r), method: :delete, class: 'ignore'

  %h2 Add a friend
  = form_tag user_world_members_path, method: :post, id: 'add-member' do
    = hidden_field_tag :id
    %fieldset.username
      = text_field_tag :username, nil, placeholder: 'notch'
      = image_tag 'spinner.gif', class: 'loading'

    %fieldset.submit
      = submit_tag 'Add member'

  :coffeescript
    $ ->
      new Mf.AddFriendView
        el: $('form#add-member')
        searchPath: '#{search_user_world_members_path(world.creator, world)}'


%section.members
  %ul
    - world.memberships.each do |m|
      %li
        = link_to user_path(m.user), class: 'avatar' do
          = avatar_tag m.user, :medium, width: 40, height: 40
        .meta
          .username
            = m.user.username
            - if m.op?
              %em.highlight (op)
          Joined #{time_ago_in_words(m.created_at)} ago.
          - if m.played?
            Last played #{time_ago_in_words(m.last_played_at)} ago.

          - if can?(:destroy, m)
            = link_to 'Remove', user_world_member_path(world.creator, world, m), method: :delete
