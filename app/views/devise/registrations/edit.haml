- title 'Settings'

.page-header
  %h1 Settings

.form-block.row#profile
  .form-title.span2 Profile

  .span6
    .row
      .span1
        = form_for resource, :method => :put, :html => {:multipart => true} do |f|
          = f.hidden_field :avatar_cache
          = image_tag current_user.avatar.medium.url, width: 60, height: 60, id: 'avatar_preview'

          = f.file_field :avatar, style: 'display:none'
          = f.label :avatar, 'Change'

          // TODO Hack!
          :css
            label[for=user_avatar] {
              margin-top: 5px;
              text-align: center;
              font-size: 12px;
              color: #CCC;
            }

          - content_for :tail do
            :javascript
              $('#user_avatar').change(function() {
                $(this).parent('form').submit();
              });

              $('#avatar_preview').click(function() {
                $('#user_avatar').click();
              });


      .span5
        = form_for resource, :method => :put do |f|
          .control-group.tight
            .controls
              = f.text_field :username, placeholder: 'Username', class: %w(span3)
            .controls
              = f.text_field :first_name, placeholder: 'First name', class: %w(span2)
              = f.text_field :last_name, placeholder: 'Last name', class: %w(span2)
            .controls
              = f.email_field :email, placeholder: 'Email', class: %w(span4)
              - if not f.object.confirmed?
                %small.help-block
                  %span.highlight #{f.object.email} is unconfirmed
                  &middot;
                  - # TODO This is a hack and not very nice
                  = link_to 'Resend confirmation', user_confirmation_path(user: {email: f.object.email}), method: 'POST'

              - if f.object.pending_reconfirmation?
                %small.help-block
                  %span.highlight  #{f.object.unconfirmed_email} is unconfirmed
                  &middot;
                  - # TODO This is a hack and not very nice
                  = link_to 'Resend confirmation', user_confirmation_path(user: {email: f.object.unconfirmed_email}), method: 'POST'

          .form-actions
            = f.submit 'Save', class: %w(btn btn-small btn-primary)


.form-block.row#accounts
  .form-title.span2 Accounts

  .accounts.span6
    .account.facebook{class: ('is-linked' if resource.facebook_linked?)}
      .profile-image.pull-left
        - if resource.facebook_linked?
          = image_tag resource.facebook_avatar_url, width: 40, height: 40
      .details
        .name
          Facebook
          - if resource.facebook_linked?
            (#{resource.name})
        .meta
          - if resource.facebook_linked?
            %a{href: "//facebook.com/#{resource.facebook_uid}"} Profile
            &middot;
            = link_to 'Unlink account', accounts_unlink_facebook_path, :method => :put, class: 'unlink'

          - else
            = link_to user_omniauth_authorize_path(:facebook) do
              Link your Facebook account
              - if Bonuses::LinkedFacebook.new(user: current_user).claimable?
                for
                = credits_with_image(Bonuses::LinkedFacebook.credits)

    #link-minecraft-modal.modal.hide.fade
      .modal-header
        %button.close{type: 'button', data: {dismiss: 'modal'}} &times;
        %h3 Link a Minecraft Account
      .modal-body


    .account.minecraft{class: ('is-linked' if resource.minecraft_linked?)}
      .profile-image.pull-left
        - if resource.minecraft_linked?
          = image_tag resource.minecraft_avatar_url, width: 40, height: 40
      .details
        .name
          Minecraft
          - if resource.minecraft_linked?
            (#{resource.players.minecraft.map(&:uid).to_sentence})
        .meta
          - if resource.minecraft_linked?
          = link_to 'Unlink account', accounts_unlink_minecraft_path, :method => :put, class: 'unlink'

          - else
            %a{href: accounts_link_minecraft_path, data: {toggle: 'modal', target: '#link-minecraft-modal'}}
              Link your Minecraft account
              - if Bonuses::MinecraftLinked.claimable_by?(current_user)
                for
                = credits_with_image(Bonuses::MinecraftLinked.credits)


.form-block.row#billing
  .form-title.span2 Billing

  .span6
    %p
      You have #{credits_with_image current_user.credits}

    %p The credit fairy will visit you on <strong>#{l Bonuses::CreditFairy.next_visit_for(current_user), :format => :date}</strong>. If you have less than #{Bonuses::CreditFairy.credits} credits they'll be topped up for <strong>free</strong>.

    %p
      %a.btn.btn-small.btn-primary.buy-credits{href: pricing_page_path} Buy credits

.form-block.row#notifications
  .form-title.span2 Notifications

  .span6
    = form_for resource, method: :put do |f|

      .control-group
        .controls
          = f.label :campaign_mailer, class: %w(checkbox) do
            = f.check_box :campaign_mailer
            Minefold newsletters

          = f.label :server_mailer, class: %w(checkbox) do
            = f.check_box :server_mailer
            Comments on servers

          = f.label :session_mailer, class: %w(checkbox) do
            = f.check_box :session_mailer
            Servers starting & stopping

      .form-actions
        = f.submit 'Save', class: %w(btn btn-small btn-primary)


.form-block.row#password
  .form-title.span2 Password

  .span6
    = form_for resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }, class: %w(form-horizontal) do |f|

      .control-group
        .controls
          = f.password_field :current_password, placeholder: 'Current password'

        .controls
          = f.password_field :password, placeholder: 'New password'

        .controls
          = f.password_field :password_confirmation, placeholder: 'Confirm new password'

      .form-actions
        = f.submit 'Save', class: %w(btn btn-small btn-primary)
