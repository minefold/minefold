- title "#{world.name} players" do
  = render partial: 'worlds/header'

- if world.creator == current_user
  - before do
    %nav.sub
      %a.invite Invite friends
      
      %a.whitelist
        Whitelisted
        %span.size{class: ('zero' if world.whitelisted_players.size.zero?)}
          = world.whitelisted_players.size
      %a.approve
        Need Approval
        %span.size{class: ('zero' if world.play_requests.size.zero?)}
          = world.play_requests.size

    :coffeescript
      $(document).ready ->
        menuLinks = $('nav.sub a')
        articles  = $('article.nav').hide()
        menuLinks.click (e) ->
          self = $(e.target)

          menuLinks.removeClass('active')

          articles.hide()
          a = articles.filter('.' + self.attr('class'))
          a.show()

          self.addClass('active')

        menuLinks.filter('.invite').click()


%article.nav.whitelist{style: ('display:none' if world.creator == current_user)}
  %ul#players.users
    %li.creator
      = link_to world.creator do

        .avatar= image_tag world.creator.avatar.head.s60.url, width: 60, height: 60

        .username= world.creator.username

    - world.whitelisted_players.each do |player|
      %li
        = link_to player do
          .avatar= image_tag player.avatar.head.s60.url, width: 60, height: 60
          .username= player.username

        - if world.creator == current_user
          = link_to 'Kick', world_player_path(world, player), method: 'delete', class: 'remove', confirm: "Are you sure you want to kick #{player.username} from #{world.name}?"

  - if world.creator == current_user

    = form_for :user, url: add_world_players_path(world), method: 'post', html: {id: 'add_user'} do |f|
      = hidden_field_tag :player_id
      %h2 Add a player
      %section
        = f.text_field :username, placeholder: 'username', autocomplete: 'off'
      %section
        = f.submit 'Add player', disabled: true

    :coffeescript
      template = _.template """
        <li class="tmp">
          <a>
            <div class="avatar">
              <img src="<%= avatar_head_60_url %>" width="60" height="60" />
            </div>
            <div class="username">
              <%= username %>
            </div>
          </a>
        </li>
      """

      default_avatar = #{image_path('question.png').to_json}

      $(document).ready ->
        form = $('#add_user')
        username = form.find('input#user_username')
        players = $('#players')

        node = $(template({avatar_head_60_url: default_avatar, username: ''}))

        player_id = form.find('input#player_id')
        player_id.change ->
          id = player_id.val()
          form.find('input[type=submit]').attr disabled: (!id? or id is '')

        form.submit ->
          id = player_id.val()
          if id? and id isnt ''
            username.blur()
          else
            false

        complete = (username) ->
          $.ajax
            url: (window.location.pathname + "/search.json")
            data:
              username: username
            dataType: 'json'
            success: (data) ->
              node.find('.avatar img').attr(src: data.avatar_head_60_url)
              player_id.val(data.id).change()

        debouncedComplete = _.debounce(complete, 300)

        username.keyup ->
          u = username.val()

          player_id.val('').change()
          node.find('.avatar img').attr(src: default_avatar)

          if u is ''
            node.detach()
            return
          else
            node.appendTo(players) if node.parent().length is 0
            node.find('.username').text(u)

          debouncedComplete(u)

%article.nav.invite{hidden}
  #invite
    %h2 Invite your friends!
    %p Enter their emails below.
    = form_for :invite, url: user_world_invite_path(world.creator, world), method: 'post' do |f|

      %section
        = f.text_area :emails, rows: 1, placeholder: 'chris@minefold.com, dave@minefold.com'

        .hint
          %p
            - if invites.length == 1
              An invite has already been sent to
              = world.invites.map {|i| i.email}.to_sentence
            - elsif invites.length > 0
              Invites have already been sent to
              = world.invites.map {|i| i.email}.to_sentence

      %section
        = f.submit 'Send invites'
      


  %article.nav.approve{hidden}
    %h2 Wait List
    - if world.play_requests.empty?
      %p.empty Empty!
    - else
      %ul#play-requests.users
        - world.play_requests.each do |req|
          %li
            = link_to req.user do
              .avatar= image_tag req.user.avatar.head.s60.url, width: 60, height: 60
            .username= req.user.username
            = link_to 'Approve', approve_play_request_user_world_players_path(world.creator, world, req), method: 'put', class: 'approve'
