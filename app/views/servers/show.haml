- title server.name, "#{server.game.name} Server #{server.id}"
- layout :servers
- track 'Viewed server', name: server.name, url: server_url(server)
- track_landing_type 'server'

.container
  .page-header
    .actions.pull-right
      - if signed_in?
        %ul.unstyled
          %li.js-toggler-container.js-social-container.watching-container{class: ('is-on' if current_user.watching.include?(server))}
            = link_to watch_server_path(server), :method => :post, remote: true, class: %w(btn btn-small ignoring js-toggler-target) do
              %i.icon-eye-open
              Watch
            = link_to unwatch_server_path(server), :method => :post, remote: true, class: %w(btn btn-small js-toggler-target watching) do
              %i.icon-eye-close
              Unwatch

            %span.label.js-social-count= server.watchers.count

    %h1= link_to server.name, server_path(server)

  :css
    .js-toggle-container .js-toggler-target {
      margin-right: 5px;
    }
    .watching-container:not(.is-on) .watching {
      display: none;
    }
    .watching-container.is-on .ignoring {
      display: none;
    }

  - content_for :tail do
    :javascript
      var togglerContainer = $('.js-toggler-container'),
          socialContainer = $('.js-social-container');

      var togglerTarget = togglerContainer.find('.js-toggler-target');

      togglerTarget.on('ajax:before', function() {
        togglerTarget.addClass('disabled');
      });

      togglerTarget.on('ajax:complete', function() {
        togglerTarget.removeClass('disabled');
      });

      togglerTarget.on('ajax:success', function(_, data) {
        togglerContainer.toggleClass('is-on');
      });

      togglerTarget.on('ajax:success', function(_, data) {
        socialContainer.find('.js-social-count').text(data.count);
      })


  %ul.nav.nav-tabs
    %li.active= link_to 'Activity', server
    - if server.game.mappable?
      %li= link_to 'Map', [:map, server]
    - if can? :update, server
      %li= link_to 'Settings', [:edit, server]

  .row
    .span8
      - if signed_in?
        .pull-left{style: 'margin-right: 20px'}
          = image_tag current_user.avatar.medium.url, width: 40, height: 40

        .pull-left{style: 'margin-bottom: 20px'}
          = form_for [server, Post.new], :method => :post do |f|
            .control-group
              = f.text_area :body, rows: 2, placeholder: 'Write a post', class: 'span7'
            = f.submit 'Write post', class: %w(btn btn-small)

      .activity-stream
        = render partial: server.activity_stream.page(0), :as => :activity

    .span4
      - if server.description?
        .server-description
          = markdown(server.description)

        - if can?(:update, server)
          %p
            (
            %a{href: edit_server_path(server)}> Edit description
            )

      - else
        .server-description.muted No description for this server.
        - if can?(:update, server)
          %p
            %a{href: edit_server_path(server)} Add a description

      %br

      - if not server.game.static_addresses?
        - case
        - when server.idle?
          = button_to 'Start Server', start_server_path(server), class: %w(btn btn-primary btn-block btn-large)
        - when server.starting?
          = button_to 'Starting serverâ€¦', start_server_path(server), class: %w(btn btn-primary btn-block btn-large), disabled: true

        - when server.up?
          = button_to 'Stop server', stop_server_path(server), class: %w(btn btn-danger btn-block)
        - when server.stopping?
          = button_to 'Stopping server', stop_server_path(server), class: %w(btn btn-danger btn-block), disabled: true


      .player-list
        - online = PartyCloud.players_online(server.party_cloud_id)
        - server.player_uids.each do |username|
          .player{class: online.include?(username) && "is-online"}
            .avatar
              = image_tag "https://minotar.net/helm/#{username}/30.png", alt: username, width: 30, height: 30

      - if signed_in?
        .alert.alert-info
          = link_to invitation_path(current_user.invitation_token) do
            Invite a friend to play here an earn an extra
            %strong= time_left Bonuses::Referred.coins
            each.


      - if not server.shared?
        .alert.alert-success
          %strong= server.creator.username
          is sponsoring this server.

      %dl
        - # TODO Get rid of this ugly conditional
        - if server.game.static_addresses? or (server.up? and server.host?)
          %dt Address
          %dd.server-address= server.address

        %dt Owner
        %dd= server.creator.username

        %dt Game
        %dd= server.funpack.game.name

        %dt Funpack
        %dd= server.funpack.name

        %dt Created
        %dd= l server.created_at, :format => :date
