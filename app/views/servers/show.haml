- title server.name
- layout :server
- track "Viewed server", name: server.name, url: server_url(server)


= render partial: 'page_header', locals: {server: server}

%ul.nav.nav-horizontal.nav-server
  %li.active= link_to 'Activity', server
  - if server.funpack.game.minecraft?
    %li= link_to 'Map', [:map, server]
  - if can? :update, server
    %li= link_to 'Settings', [:edit, server]

/ --

.server-meta
  - case server.state
  - when :shared
    .row
      .span2.key Address
      .span5
        %span.server-address= server.address

    .row
      .span2.key Up since
      .span5= l server.created_at

  - when :up
    .row
      .span2.key Address
      .span5
        %span.server-address= server.address

    .row
      .span2.key Up since
      .span5
        = server.start_at.strftime("%l:%M%P")
        on
        = server.start_at.strftime("%a %b %-m, %Y")

    .row
      .span2.key Stopping
      .span5
        = server.stop_at.strftime("%l:%M%P")
        on
        = server.stop_at.strftime("%a %b %-m, %Y")
        (#{pluralize server.ttl / 1.minute, 'min', 'mins'} from now)

  - when :stopped
    .row
      .span2.key State
      .span5 Stopped

  - # TODO: Hack for Minecraft!
  .row
    .span2.key Players
    .span5{style: 'overflow:auto'}
      - server.settings['whitelist'].lines.map(&:strip).each do |username|
        .pull-left{style: 'margin-right:5px;margin-bottom:10px'}
          = image_tag "https://minotar.net/helm/#{username}/20.png", class: 'image-circle', alt: username

- if can?(:update, server) and server.normal?
  = form_tag extend_server_path(server), method: 'put', class: 'server-controls' do
    %input#mins{type: 'hidden', name: 'mins'}
    .row
      .span2
        %h4.align-right
          - if server.running?
            Extend by
          - else
            Start for

      .span6
        %select#extend-server-time-select{name: 'mins'}
          - 1.upto(24) do |h|
            %option{value: (h.hours / 1.minute)}
              = pluralize h, 'hour', 'hours'

        %p.extension-info
          %span.planned This will cost #{credits_with_image(5 * 60)},
          %span.current you have #{credits_with_image(current_user.credits)}.
          %a.buy-credits{href: pricing_page_path} Buy more credits.

        %input.btn.btn-primary.btn-small.btn-success{type: 'submit', value: (server.running? ? 'Extend time' : 'Start server')}

  - content_for :tail do
    :javascript
      var timeSelect = $('#extend-server-time-select');
      timeSelect.find('option').each(function(el) {
        var $this = $(this),
            t = moment().add('minutes', parseInt($this.val(), 10));

        $this.text($this.text() + " (" + t.calendar() + ")");
      });


      timeSelect.change(function(e) {
        var $el = $(e.target),
            mins = parseInt($el.val(), 10),
            rate = 5,
            cost = mins * rate;

        $('.extension-info .planned .cr').text(cost);

        var tooExpensive = cost > app.currentUser.get('credits');

        $('.server-controls').toggleClass('is-too-expensive', tooExpensive);

        $el.parents('form').find('input[type=submit]').attr('disabled', tooExpensive);

      });

      timeSelect.change();



.comments
  - if signed_in?
    = form_for [server, Comment.new], method: 'POST', html: {class: %w(new-comment-form row)} do |f|
      .span1
        = image_tag current_user.avatar.medium.url, width: 60, height: 60

      .span7
        .comment-meta
          %span.comment-author= current_user.username
        = f.text_area :body, height: 4, class: %w(span5)
        = f.submit 'Comment', class: %w(btn)

  - server.comments.each do |comment|
    .comment.row
      .span1
        = image_tag comment.author.avatar.large.url, width: 60, height: 60
      .span7
        .comment-meta
          %span.comment-author= comment.author.username
          %span.comment-date
            at
            = comment.created_at.strftime('%l:%M%P on %-d/%-m/%Y')
        .comment-body
          = markdown comment.body
