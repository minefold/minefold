- title server.name
- layout :server
= render partial: 'page_header', locals: {server: server}

%ul.nav.nav-horizontal.nav-server
  %li.active= link_to 'Activity', server
  - if server.funpack.game.minecraft?
    %li= link_to 'Map', [:map, server]
  - if can? :update, server
    %li= link_to 'Settings', [:edit, server]

/ --

- if can?(:update, server) and not server.super_server?
  .server-controls
    .controls
      - if server.running?
        Extend running the server for another
      - else
        Run the server for
      %br
      
      %input#poop{type: 'text', data: {slider: true, 'slider-range' => '0,24', 'slider-snap' => true, 'slider-step' => 1}}
      
      / %select#poop
      /   - (1..24).each do |n|
      /     %option{value: n.hours}= pluralize n, 'hour', 'hours'
        
      #plop
        This will cost
        = credits_with_image nil
      
      %div
        You have
        = credits_with_image current_user.credits
    
      %div
        It will stop running at
        %strong#baz
    
      %p
        %a.btn.btn-primary{href: '#'} Start

- content_for :tail do
  :javascript
    $('#poop').bind('slider:changed', function(e, data) {
      var hrs = data.value,
          mins = hrs * 60,
          seconds = mins * 60,
          rate = 5;
      
      $('#plop .cr').text(mins * rate);
      
      var end = new Date();
      
      end.setSeconds(end.getSeconds() + seconds);
      
      $('#baz').text(end.toString());
    });
    
    $('#poop').change()



.comments
  - if signed_in?
    = form_for [server, Comment.new], method: 'POST', html: {class: %w(new-comment-form row)} do |f|
      .span1
        = image_tag current_user.avatar.large.url, width: 60, height: 60, class: 'img-circle'
        
      .span7
        .comment-meta
          %span.comment-author= current_user.username
          
        .row
          .span5= f.text_area :body, height: 4, class: %w(span5)
          .span2= f.submit 'Comment', class: %w(btn)
  
  - server.comments.each do |comment|
    .comment.row
      .span1
        = image_tag comment.author.avatar.large.url, width: 60, height: 60, class: 'img-circle'
      .span7
        .comment-meta
          %span.comment-author= comment.author.username
          %span.comment-date
            at
            = comment.created_at.strftime('%l:%M%P on %-d/%-m/%Y')
        .comment-body
          = markdown comment.body
