- title server.name
- layout :server
= render partial: 'page_header', locals: {server: server}

%ul.nav.nav-horizontal.nav-server
  %li= link_to 'Activity', server
  - if server.funpack.game.minecraft?
    %li= link_to 'Map', [:map, server]
  - if can? :update, server
    %li.active= link_to 'Settings', [:edit, server]


/ --

- if server.running?
  .alert
    %strong This server is running.
    If you change these settings the server will restart. To change settings <i>without</i> restarting the server, please do so in the game.

%hr.large

.account-form-section.row
  .section-label.span2
    %h3 General

  .span6
    = form_for server do |f|
      = f.control_group :name do
        .control-label Name
        .controls
          = f.text_field :name, class: %w(span6)

      .form-actions
        = f.submit 'Save', class: %w(btn btn-mini btn-primary)

- if server.game.persistant? and server.world
  .account-form-section.row
    .section-label.span2
      %h3 World

    .span6
      %p
        Last backup at #{l server.world.created_at}
        &middot;
        = link_to 'Download archive', party_cloud_world_download_url(server.world)

      - if server.world.legacy_parent_id?
        - parent = server.world.legacy_parent.server
        %p Forked from #{parent.name} by #{parent.creator.username}.

      %hr

      -# = form_for '#' do |f|

      .control-group
        .control-label Upload a new world
        .controls
          - content_for :tail do
            = javascript_include_tag 'https://api.filepicker.io/v1/filepicker.js'
            :javascript
              filepicker.setKey(#{ENV['FILEPICKER'].to_json});

          %p Replaces the current world. Must be in Zip format.

          %p.alert This is irreversible and <i>all existing data will be lost forever</i>.

          %input{type: 'filepicker-dragdrop', data: {'fp-class' => 'filepicker filepicker-dragdrop', 'fp-button-class' => 'btn btn-mini', 'fp-button-text' => 'Choose world archive', 'fp-mimetype' => 'application/zip', 'fp-openTo' => 'COMPUTER'}}

.account-form-section.row
  .section-label.span2
    %h3 Gameplay
  .span6
    = form_for server do |f|
      = f.fields_for :settings do |s|
        = render partial: server.funpack.game.settings_partial, locals: {f: s}

      .form-actions
        = f.submit 'Save', class: %w(btn btn-mini btn-primary)

- if can? :destroy, server
  .account-form-section.row
    .section-label.span2
      %h3 Danger Zone
    .span6
      %p Destroying a server <strong>immediately halts it</strong> and <strong>destroys all its data</strong>. You <i>will not be credited</i> for any remaining time. There is no way to recover a server once it has been destroyed. <span class="highlight">With great power comes great responsibility.</span>

      = button_to 'Destroy server', server_path(server), method: :delete, class: %w(btn btn-mini btn-danger)
