- title server.name
- layout :server
= render partial: 'page_header', locals: {server: server}

%ul.nav.nav-server
  %li= link_to 'Activity', server
  - if server.funpack.game.minecraft?
    %li= link_to 'Map', [:map, server]
  - if can? :update, server
    %li.pull-right.active= link_to 'Settings', [:edit, server]


/ --


- if server.up?
  .alert
    %strong This server is running.
    If you change these settings the server will restart. To change settings <i>without</i> restarting the server, please do so in the game.

/ TODO This is a hack
%hr.hidden

.form-block.row
  .form-title.span2.offset1 General

  .span6
    = form_for server do |f|
      = f.control_group :name do
        .control-label Name
        .controls
          = f.text_field :name, class: %w(span6)

      .form-actions
        = f.submit 'Save', class: %w(btn btn-small btn-primary)


/ --


.form-block.row
  .form-title.span2.offset1 Controls
  .span6
    - case server.state
    - when :shared
      %p Server is shared. Its address is
      %pre
        %span.server-address= server.address

    - when :stopped
      = form_tag start_server_path(server), method: 'put', class: 'server-controls' do
        %p Choose the number of hours you want to run this server for

        .row.control-group
          .control-label.server-controls-ttl-display.span1#server_ttl_display &nbsp;
          .span5
            .controls
              %input#server_ttl{type: 'text', name: 'ttl', data: {slider: 'true', 'slider-range' => '1,24', 'slider-step' => 1, 'slider-snap' => 'true'}}

        %p
          Starting the server for
          %span#server_session_ttl.highlight
          will cost
          %span#server_session_cost.highlight
          \.
          You have #{pluralize current_user.coins, 'coin', 'coins'}.
          %span#server_session_valid{hidden}
            It will shutdown at
            %span#server_session_ends_at.highlight
          %span#server_session_warning{hidden}
            You don't have enough coins so the server will stop when you run out (at roughly
            %span#server_killed_at.highlight
            ).

        .form-actions
          %input.btn.btn-primary.btn-small{type: 'submit', value: 'Start server'}

      - content_for :tail do
        :javascript
          var ttl = $('#server_ttl');

          ttl.bind('slider:changed', function(e, data) {
            var hrs = data.value,
                mins = data.value * 60,
                rate = 5,
                cost = mins * rate;

            // Number of hours
            $('#server_ttl_display').text(pluralize(hrs, 'hour', 'hours'));
            $('#server_session_ttl').text(pluralize(hrs, 'hour', 'hours'));

            // Cost
            $('#server_session_cost').text(pluralize(cost, 'coin', 'coins'));

            if (cost < app.currentUser.get('coins')) {
              $('#server_session_valid').show();
              $('#server_session_warning').hide();

              $('#server_session_ends_at').text(moment().add('hours', hrs).format('h:mm a'));

            } else {
              $('#server_session_valid').hide();
              $('#server_session_warning').show();

              mins = app.currentUser.get('coins') / rate;

              $('#server_killed_at').text(moment().add('minutes', mins).format('h:mm a'));
            }
          });

          $(document).ready(function() {
            ttl.simpleSlider('setValue', 2);
            ttl.simpleSlider('setValue', 1);
          });


    - when :starting
      %p Server is starting. Please be patient.

    - when :up
      %p Server is running. Its address is
      %pre
        %span.server-address= server.address



/ --


- if server.world
  .form-block.row
    .form-title.span2.offset1 World

    .span6
      %p
        Last backup at #{l server.world.created_at}
        &middot;
        = link_to 'Download archive', party_cloud_world_download_url(server.world)

      - # TODO Investigate why parent wouldn't have a server.
      - if server.world.legacy_parent and server.world.legacy_parent.server
        - parent = server.world.legacy_parent.server
        %p
          Forked from
          = link_to parent.name, server_path(parent)
          by #{parent.creator.username}.

      - # if world uploads gets done!
      - if false
        .control-group
          .control-label Upload a new world
          .controls
            - content_for :tail do
              = javascript_include_tag 'https://api.filepicker.io/v1/filepicker.js'
              :javascript
                filepicker.setKey(#{ENV['FILEPICKER'].to_json});

            %p Replaces the current world. Must be in Zip format.

            %p.alert This is irreversible and <i>all existing data will be lost forever</i>.

            %input{type: 'filepicker-dragdrop', data: {'fp-class' => 'filepicker filepicker-dragdrop', 'fp-button-class' => 'btn btn-mini', 'fp-button-text' => 'Choose world archive', 'fp-mimetype' => 'application/zip', 'fp-openTo' => 'COMPUTER'}}


/ --


.form-block.row
  .form-title.span2.offset1 Gameplay

  .span6
    = form_for server do |f|
      = f.fields_for :settings, OpenStruct.new(server.settings) do |s|
        = render partial: server.funpack.game.settings_partial, locals: {f: s}

      .form-actions
        = f.submit 'Save', class: %w(btn btn-small btn-primary)

- if can? :destroy, server
  .form-block.row
    .form-title.span2.offset1 Danger Zone

    .span6
      %p Destroying a server <strong>immediately stops it</strong> and <strong>destroys all its data</strong>. There is no way to recover a server once it has been destroyed. <span class="highlight">With great power comes great responsibility.</span>

      = button_to 'Destroy server', server_path(server), method: :delete, class: %w(btn btn-small btn-danger)
