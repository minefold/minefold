- title server.name
- layout :settings

.container
  .page-header
    %a{href: server_path(server)} &larr; back to #{server.name}
    %h1
      Settings for #{server.name}

  .row
    .span2
      %strong General

    .span6
      = form_for server do |f|
        = f.control_group :name do
          = f.label :name, class: 'control-label'
          .controls
            = f.text_field :name, class: %w(span6)

        = f.control_group :description do
          = f.label :description, class: 'control-label'
          .controls
            = f.text_area :description, class: %w(span6), rows: 6

        .form-actions
          = f.submit 'Save', class: %w(btn btn-primary)

  .row
    .span2
      %strong Access

    .span6
      = form_for server do |f|
        = f.control_group :access_policy_id do
          .controls
            - server.available_access_policies.each do |id, policy|
              = f.label "access_policy_id_#{id}", class: 'radio' do
                = f.radio_button :access_policy_id, id

                - case
                - when policy == PublicAccessPolicy
                  Anybody can play

                - when policy == MinecraftWhitelistAccessPolicy
                  Only whitelist

                - when policy == MinecraftBlacklistAccessPolicy
                  Anybody can play

                - when policy == TeamFortress2PasswordAccessPolicy
                  Set a password and tell that to your friends

        .form-actions
          = f.submit 'Save', class: %w(btn btn-primary)

  - content_for :tail do
    :javascript
      $(document).ready(function() {
        $('#server_shared_false').change(function() {
          $('#pooperooni.shared_false').show();
          $('#pooperooni.shared_true').hide();
        });

        $('#server_shared_true').change(function() {
          $('#pooperooni.shared_true').show();
          $('#pooperooni.shared_false').hide();
        });

      });


  / --


  .row
    .span2
      %strong Gameplay

    .span6
      = form_tag gameplay_server_path(server), :method => :put do |f|
        = server.funpack.settings.to_html(server.settings).html_safe

        .form-actions
          - if server.up?
            %p.help-block
              %span.highlight People are playing on this server.
              If you save and stop, everybody will be kicked. If you just save, the settings they will be applied when they leave.

            %div
              = submit_tag 'Save and restart server', name: 'restart', class: %w(btn btn-primary)
              = submit_tag 'Save', class: %w(btn)

          - else
            = submit_tag 'Save', class: %w(btn btn-primary)


  / --

  - if server.funpack.persistent?
    .row
      .span2
        %strong Backups

      .span6
        - if server.world
          %p
            Last backup at #{I18n.l server.world.updated_at}
            &middot;
            = link_to 'Download archive', party_cloud_world_download_url(server)

          - # TODO Investigate why parent wouldn't have a server.
          - if server.world.legacy_parent and server.world.legacy_parent.server
            - parent = server.world.legacy_parent.server
            %p
              Forked from
              = link_to parent.name, server_path(parent)
              by #{parent.creator.username}.

        - else
          %p.muted Server doesn't have any backups.

      - if server.funpack.imports?
        .span2
        .span6= render partial: 'upload', locals: {server: server}


  - if can? :destroy, server
    .row
      .span2
        %strong Danger Zone

      .span6
        %p Destroying a server <strong>immediately stops it</strong> and <strong>destroys all its data</strong>. There is no way to recover a server once it has been destroyed. <span class="highlight">With great power comes great responsibility.</span>

        = button_to 'Destroy server', server_path(server), method: :delete, class: %w(btn btn-small btn-danger), confirm: 'Are you sure you want to destroy this server?'
